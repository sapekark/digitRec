Configuring polynomial-0.7.3...
Preprocessing library for polynomial-0.7.3..
Building library for polynomial-0.7.3..
[ 1 of 15] Compiling Data.List.ZipSum ( src\Data\List\ZipSum.hs, .stack-work\dist\5c8418a7\build\Data\List\ZipSum.o )
[ 2 of 15] Compiling Data.VectorSpace.WrappedNum ( src\Data\VectorSpace\WrappedNum.hs, .stack-work\dist\5c8418a7\build\Data\VectorSpace\WrappedNum.o )

[;1msrc\Data\VectorSpace\WrappedNum.hs:11:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The qualified import of `Data.Vector.Generic' is redundant
      except perhaps to import instances from `Data.Vector.Generic'
    To import instances alone, use: import Data.Vector.Generic()[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m11 |[0m[0m [;1m[35mimport qualified Data.Vector.Generic[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Data\VectorSpace\WrappedNum.hs:12:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The qualified import of `Data.Vector.Generic.Mutable' is redundant
      except perhaps to import instances from `Data.Vector.Generic.Mutable'
    To import instances alone, use: import Data.Vector.Generic.Mutable()[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m12 |[0m[0m [;1m[35mimport qualified Data.Vector.Generic.Mutable[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Data.VectorSpace.WrappedNum' has been inferred as unsafe!
    Reason:
        [;1msrc\Data\VectorSpace\WrappedNum.hs:2:14: [0m[0m[;1m[;1m[0m[0m[;1m[;1m
            -XGeneralizedNewtypeDeriving is not allowed in Safe Haskell[0m[0m[;1m
        [;1msrc\Data\VectorSpace\WrappedNum.hs:1:14: [0m[0m[;1m[;1m[0m[0m[;1m[;1m
            -XTemplateHaskell is not allowed in Safe Haskell[0m[0m[;1m[0m[0m
[0m[0m[0m[ 3 of 15] Compiling Math.Polynomial.Type ( src\Math\Polynomial\Type.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Type.o )

[;1msrc\Math\Polynomial\Type.hs:135:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "wrapPoly/unwrapPoly" may never fire
      because `wrapPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `wrapPoly'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m135 |[0m[0m {-# RULES [;1m[35m"wrapPoly/unwrapPoly"   forall x. wrapPoly (unwrapPoly x) = x[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Type.hs:135:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "wrapPoly/unwrapPoly" may never fire
      because `unwrapPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `unwrapPoly'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m135 |[0m[0m {-# RULES [;1m[35m"wrapPoly/unwrapPoly"   forall x. wrapPoly (unwrapPoly x) = x[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Type.hs:136:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "unwrapPoly/wrapPoly" may never fire
      because `unwrapPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `unwrapPoly'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m136 |[0m[0m {-# RULES [;1m[35m"unwrapPoly/wrapPoly"   forall x. unwrapPoly (wrapPoly x) = x[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Type.hs:136:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "unwrapPoly/wrapPoly" may never fire
      because `wrapPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `wrapPoly'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m136 |[0m[0m {-# RULES [;1m[35m"unwrapPoly/wrapPoly"   forall x. unwrapPoly (wrapPoly x) = x[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Type.hs:137:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "wrapPoly.unwrapPoly" may never fire
      because `.' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `.'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m137 |[0m[0m {-# RULES [;1m[35m"wrapPoly.unwrapPoly"   wrapPoly . unwrapPoly = id[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Type.hs:137:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "wrapPoly.unwrapPoly" may never fire
      because `unwrapPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `unwrapPoly'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m137 |[0m[0m {-# RULES [;1m[35m"wrapPoly.unwrapPoly"   wrapPoly . unwrapPoly = id[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Type.hs:137:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "wrapPoly.unwrapPoly" may never fire
      because `wrapPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `wrapPoly'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m137 |[0m[0m {-# RULES [;1m[35m"wrapPoly.unwrapPoly"   wrapPoly . unwrapPoly = id[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Type.hs:138:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "unwrapPoly.wrapPoly" may never fire
      because `.' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `.'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m138 |[0m[0m {-# RULES [;1m[35m"unwrapPoly.wrapPoly"   unwrapPoly . wrapPoly = id[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Type.hs:138:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "unwrapPoly.wrapPoly" may never fire
      because `wrapPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `wrapPoly'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m138 |[0m[0m {-# RULES [;1m[35m"unwrapPoly.wrapPoly"   unwrapPoly . wrapPoly = id[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Type.hs:138:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "unwrapPoly.wrapPoly" may never fire
      because `unwrapPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `unwrapPoly'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m138 |[0m[0m {-# RULES [;1m[35m"unwrapPoly.wrapPoly"   unwrapPoly . wrapPoly = id[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Type' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Type.hs:45:1: error:
            Data.VectorSpace.WrappedNum: Can't be safely imported!
            The module itself isn't safe.
        src\Math\Polynomial\Type.hs:47:1: error:
            Data.Vector: Can't be safely imported!
            The module itself isn't safe.
        src\Math\Polynomial\Type.hs:48:1: error:
            Data.Vector.Unboxed: Can't be safely imported!
            The module itself isn't safe.
        src\Math\Polynomial\Type.hs:52:1: error:
            Unsafe.Coerce: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m
[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Type' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Type.hs:135:11: warning:
            Rule "wrapPoly/unwrapPoly" ignored
            User defined rules are disabled under Safe Haskell
        src\Math\Polynomial\Type.hs:136:11: warning:
            Rule "unwrapPoly/wrapPoly" ignored
            User defined rules are disabled under Safe Haskell
        src\Math\Polynomial\Type.hs:137:11: warning:
            Rule "wrapPoly.unwrapPoly" ignored
            User defined rules are disabled under Safe Haskell
        src\Math\Polynomial\Type.hs:138:11: warning:
            Rule "unwrapPoly.wrapPoly" ignored
            User defined rules are disabled under Safe Haskell[0m[0m
[0m[0m[0m[ 4 of 15] Compiling Math.Polynomial.Pretty ( src\Math\Polynomial\Pretty.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Pretty.o )

[;1msrc\Math\Polynomial\Pretty.hs:49:5: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wdeprecations[0m[0m[;1m][0m[0m[;1m
    In the use of `prettyParen'
    (imported from Text.PrettyPrint.HughesPJClass):
    Deprecated: "Please use 'maybeParens' instead"[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m49 |[0m[0m     [;1m[35mprettyParen[0m[0m (p && not (null (drop 1 xs)))   
[;1m[34m   |[0m[0m[;1m[35m     ^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Pretty' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Pretty.hs:14:1: error:
            Math.Polynomial.Type: Can't be safely imported!
            The module itself isn't safe.
        [;1msrc\Math\Polynomial\Pretty.hs:21:10: [0m[0m[;1m[;1m[0m[0m[;1m[;1m
            [incoherent] overlap mode isn't allowed in Safe Haskell[0m[0m[;1m
        [;1msrc\Math\Polynomial\Pretty.hs:27:10: [0m[0m[;1m[;1m[0m[0m[;1m[;1m
            [incoherent] overlap mode isn't allowed in Safe Haskell[0m[0m[;1m
        [;1msrc\Math\Polynomial\Pretty.hs:34:10: [0m[0m[;1m[;1m[0m[0m[;1m[;1m
            [incoherent] overlap mode isn't allowed in Safe Haskell[0m[0m[;1m[0m[0m
[0m[0m[0m[ 5 of 15] Compiling Math.Polynomial.VectorSpace ( src\Math\Polynomial\VectorSpace.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\VectorSpace.o )

[;1msrc\Math\Polynomial\VectorSpace.hs:77:3: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "sum Poly" may never fire because `zero' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `zero'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m77 |[0m[0m   [;1m[35m"sum Poly"    forall ps. foldl addPoly zero ps = sumPolys ps[0m[0m
[;1m[34m   |[0m[0m[;1m[35m   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\VectorSpace.hs:77:3: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "sum Poly" may never fire because `addPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `addPoly'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m77 |[0m[0m   [;1m[35m"sum Poly"    forall ps. foldl addPoly zero ps = sumPolys ps[0m[0m
[;1m[34m   |[0m[0m[;1m[35m   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\VectorSpace.hs:109:17: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-matches[0m[0m[;1m][0m[0m[;1m
    Defined but not used: `p'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m109 |[0m[0m         powPoly [;1m[35mp[0m[0m 0 = constPoly one
[;1m[34m    |[0m[0m[;1m[35m                 ^[0m[0m
[0m[0m[0m
[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.VectorSpace' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\VectorSpace.hs:22:1: error:
            Math.Polynomial.Type: Can't be safely imported!
            The module itself isn't safe.
        src\Math\Polynomial\VectorSpace.hs:23:1: error:
            Math.Polynomial.Pretty: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m
[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.VectorSpace' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\VectorSpace.hs:77:3: warning:
            Rule "sum Poly" ignored
            User defined rules are disabled under Safe Haskell[0m[0m
[0m[0m[0m[ 6 of 15] Compiling Math.Polynomial  ( src\Math\Polynomial.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial.o )

[;1msrc\Math\Polynomial.hs:51:3: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "sum Poly" may never fire because `zero' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `zero'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m51 |[0m[0m   [;1m[35m"sum Poly"    forall ps. foldl addPoly zero ps = sumPolys ps[0m[0m
[;1m[34m   |[0m[0m[;1m[35m   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial.hs:51:3: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "sum Poly" may never fire because `addPoly' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `addPoly'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m51 |[0m[0m   [;1m[35m"sum Poly"    forall ps. foldl addPoly zero ps = sumPolys ps[0m[0m
[;1m[34m   |[0m[0m[;1m[35m   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial.hs:19:1: error:
            Math.Polynomial.Type: Can't be safely imported!
            The module itself isn't safe.
        src\Math\Polynomial.hs:20:1: error:
            Math.Polynomial.Pretty: Can't be safely imported!
            The module itself isn't safe.
        src\Math\Polynomial.hs:22:1: error:
            Math.Polynomial.VectorSpace: Can't be safely imported!
            The module itself isn't safe.
        src\Math\Polynomial.hs:24:1: error:
            Data.VectorSpace.WrappedNum: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m
[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial.hs:51:3: warning:
            Rule "sum Poly" ignored
            User defined rules are disabled under Safe Haskell[0m[0m
[0m[0m[0m[ 7 of 15] Compiling Math.Polynomial.NumInstance ( src\Math\Polynomial\NumInstance.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\NumInstance.o )

[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.NumInstance' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\NumInstance.hs:10:1: error:
            Math.Polynomial: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m[ 8 of 15] Compiling Math.Polynomial.Newton ( src\Math\Polynomial\Newton.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Newton.o )

[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Newton' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Newton.hs:3:1: error:
            Math.Polynomial: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m[ 9 of 15] Compiling Math.Polynomial.Legendre ( src\Math\Polynomial\Legendre.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Legendre.o )

[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Legendre' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Legendre.hs:4:1: error:
            Math.Polynomial: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m[10 of 15] Compiling Math.Polynomial.Lagrange ( src\Math\Polynomial\Lagrange.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Lagrange.o )

[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Lagrange' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Lagrange.hs:8:1: error:
            Math.Polynomial: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m[11 of 15] Compiling Math.Polynomial.Interpolation ( src\Math\Polynomial\Interpolation.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Interpolation.o )

[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Interpolation' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Interpolation.hs:4:1: error:
            Math.Polynomial: Can't be safely imported!
            The module itself isn't safe.
        src\Math\Polynomial\Interpolation.hs:5:1: error:
            Math.Polynomial.Lagrange: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m[12 of 15] Compiling Math.Polynomial.Hermite ( src\Math\Polynomial\Hermite.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Hermite.o )

[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Hermite' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Hermite.hs:3:1: error:
            Math.Polynomial: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m[13 of 15] Compiling Math.Polynomial.Chebyshev ( src\Math\Polynomial\Chebyshev.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Chebyshev.o )

[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Chebyshev' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Chebyshev.hs:4:1: error:
            Math.Polynomial: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m[14 of 15] Compiling Math.Polynomial.Bernstein ( src\Math\Polynomial\Bernstein.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Bernstein.o )

[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Bernstein' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Bernstein.hs:11:1: error:
            Math.Polynomial: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0m[15 of 15] Compiling Math.Polynomial.Bernoulli ( src\Math\Polynomial\Bernoulli.hs, .stack-work\dist\5c8418a7\build\Math\Polynomial\Bernoulli.o )

[;1msrc\Math\Polynomial\Bernoulli.hs:4:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The import of `Data.VectorSpace' is redundant
      except perhaps to import instances from `Data.VectorSpace'
    To import instances alone, use: import Data.VectorSpace()[0m[0m
[;1m[34m  |[0m[0m
[;1m[34m4 |[0m[0m [;1m[35mimport Data.VectorSpace[0m[0m
[;1m[34m  |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Math\Polynomial\Bernoulli.hs:23:12: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-matches[0m[0m[;1m][0m[0m[;1m
    Defined but not used: `p'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m23 |[0m[0m   where f ([;1m[35mp[0m[0m, ip) = case polyIntegral ip of
[;1m[34m   |[0m[0m[;1m[35m            ^[0m[0m
[0m[0m[0m
[;1mon the commandline: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunsafe[0m[0m[;1m][0m[0m[;1m
    `Math.Polynomial.Bernoulli' has been inferred as unsafe!
    Reason:
        src\Math\Polynomial\Bernoulli.hs:3:1: error:
            Math.Polynomial: Can't be safely imported!
            The module itself isn't safe.[0m[0m
[0m[0m[0mInstalling library in C:\dev\Projects\Haskell\digitRec\digitRec\.stack-work\install\69d820b8\lib\x86_64-windows-ghc-8.2.2\polynomial-0.7.3-9sxkY59y4aI4V7piDCcjoy
Registering library for polynomial-0.7.3..
